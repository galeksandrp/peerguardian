BUGS of pgl:

Minor bugs may be listed in docs/TODO.

- Serious security problem(s):
  pglgui creates /tmp/execute-all-pgl-commands.sh (with the rights of the user
  running pglgui) and executes that file with root rights (gained via
  [gk|kde]su(do).
  An attacker who has control over the user account (but not yet over the
  root account) may use this file to gain root access.
  You may be safer if you run pglgui as root to avoid this problem. On the
  other site, if there is any other security hole in pglgui, it gets worse by
  running pglgui as root.
  Maybe this problem could be solved by implementing policykit (longtime on
  the TODO for replacing the current [gk|kde]su(do), so that we
  don't have to use the /tmp/execute-all-pgl-commands.sh at all.
  Maybe there is an easy way to fix the problem in the short run.
  If we stay with /tmp/execute-all-pgl-commands.sh it should be created
  owned and being writable only by root (this triggers earlier and more
  frequent calls of [gk|kde]su(do) (whenever code is going to be added to
  /tmp/execute-all-pgl-commands.sh, yet before the script is really executed),
  which could be more elegantly handled by policykit support.
  Generally, the security concept of pgl has to be revisited. Also have a look
  at http://www.freedesktop.org/software/systemd/man/daemon.html for this
  task.

- pglgui shows the number of IPs and IP ranges that it is blocking. Due to the
  technical implementation this number keeps unchanged if you whitelist IPs,
  although you should think that it gets smaller. So this is just a "visibility"
  problem, but doesn't mean that anything doesn't work.
  Technical explanation: the number of IPs that get blocked relates to the
  blocklist that pgld uses. But the whitelisting is done with iptables rules
  (target RETURN) that prevent that the whitelisted traffic ever reaches pgld.
  --
  2011-08-11, jre <jre-phoenix@users.sourceforge.net>


- "update" doesn't work with OpenDNS
  see e.g. here:
  http://forums.phoenixlabs.org/showpost.php?p=127410&postcount=7
  http://forums.phoenixlabs.org/showthread.php?t=18045
  http://ubuntuforums.org/showthread.php?t=1189320


- pglcmd only monitors if pgld starts successfully until pgld forks
  (daemonizes). Everything that happens after the fork doesn't get catched.
  - Therefore move as much as possible of the pgld start code before the fork.
    Note that e.g. the pidfile generation has to be done afterwards, because a
    forked process has a new pid. [ DONE ]
  - A possible solution would be for pglcmd to wait some seconds, and then check
    again, but this makes starting slow, so this is not applied.
  - pglcmd.wd partly solves this by doing a restart and notifying the user per
    email and in the logfile.
  --
  2009-11-15, jre <jre-phoenix@users.sourceforge.net>

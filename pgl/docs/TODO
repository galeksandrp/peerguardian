TODO

pgld:

  - replace NIPQUAD (removed from kernel 2.6.36)

  - improve logging: object org/netfilter/pgl/IpMatch consisting of separate
    items (srcip, srcport, destip, destport, proto, description) instead of a
    plain string.

  - add option to search for a specified IP in a blocklist:
    pgld -f IP BLOCKLIST
    if IP is found in the BLOCKLIST: return 0 and output the matching range(s).
    if IP is not found: return 1

  - make length of range description configurable (with LOWMEM:=range=0)



pglcmd:

  - FIX: on stop (and probably other commands), only dump/reset stats once

  - nice: on CentOS it is required to use e.g. "+5". Find solutions suiting all
    distros.

  - adapt to real allow lists:
    requires allow lists in pgld, see above
    - add configuration file allowlists.lists to handle remote allowlists
      (like blocklists.list for remote blocklists)
    - load all allowlists in a specified folder "allowlists.local"
    - remove variables ALLOW_[IN|OUT|FWD]

  - search function:
    requires search function in pgld, see above.
    Use this function instead of grep'ping for REGEX.

  - use "ip addr" instead of "ifconfig":
    see http://jengelh.medozas.de/2008/0219-ifconfig-sucks.php

  - add dbus support, especially for logging.
    - Completely rework the logging part, and check if all messages go where
      they should.
    - send error messages to console (STDERR 1>&2), logfile and dbus.

  - add pidfile for pglcmd (e.g. to prevent 2 starts at nearly the same time.
    How to handle "update"? - this does not conflict with start.

  - Send traffic to several NFQUEUE nums with --queue-balance and run multiple
    pgld instances for these nums. This might help on heavy load.

    Alternatively increasing the default receive/send window seems to fix the
    problem:
        sysctl -w net.core.rmem_default=8388608
        sysctl -w net.core.wmem_default=8388608
    --
    peerguardian-devel@lists.sourceforge.net by dogg@retroject.net - 2010-04-20

  - on "stop" remove kernel modules that were inserted by pglcmd. (see dino's
    synology packaging http://forums.phoenixlabs.org/showpost.php?p=128371&postc
    ount=20). Probably disable this per default, to avoid problems.

  - fix debconf to use debian/config again.
    This stuff is currently in postinst, because otherwise debconf doesn't work
    as expected: Debconf runs twice during installation: first it asks questions
    and then it overwrites the answers with the not-yet modified configuration
    files.
    Further the debconf database is not cleared properly on purge.

  - adapt test function for peerguardian .p2b v2 binary format blocklist
    formats.

  - [DISCUSS]: if any blocklist is unavailable, should pglcmd exit (as it
    does currently, in order to give no false security), or continue but return
    an error (if one list is missing, it's still better to use at least the
    other blocklists).

  - [DISCUSS] Block IPv6 completely because currently only IPv4 is checked?



pgl-gui:

###############################################################################

  [freemind]

  pgl-gui only:

  - images/settings.png is not shown

  - right-click whitelisting:
    tooltips are not shown.
    "Whitelist temporarily" is not explained to the user.

  - Window title "Blocking $X IP ranges ($Y IPs)":
    Correct long term implementation: request the data from pgld via dbus.

  - policykit support (instead of kdesudo/gksu)

  - clean up code: get rid of all unused remnants of mobloquer

  - use ${BLOCKLISTS_DIR}/lists.xml to determine human friendly blocklist names
    for URLs like this: http://list.iblocklist.com/?list=ewqglwibdgjttwttrinl&fi
    leformat=p2p&archiveformat=gz
    Also use lists.xml to show the list description.
    Verify that lists like "example.com/list/list2" work.

  - "Last blocklist update":
    Implement per blocklist in "Configure - Blocklist"
    (use "stat --format=%y $BLOCKLIST_DOWNLOADED | head -c 16").
    [ $BLOCKLIST_DOWNLOADED requires ${BLOCKLISTS_DIR}/lists.xml (implement
    directly in pgl-gui or use function LIST_URL2LIST_NAME from pglcmd.lib ]

  - Allow to sort the columns in "Configure - Whitelist" by clicking in their
    header.

  - pop-up warning on errors from pglcmd (e.g. blocklist is not available)
    [ Requires pglcmd dbus ]

  - whitelisting with right-clicking in the log of blocked IPs window:

    - temp allow:
      delete the iptables rule after X minutes (as far as pgl-gui doesn't crash,
      otherwise live with it and wait for the next pglcmd restart)

    - add complete blocked item (combination of all IP, port and proto as
      iptables rule to e.g. pgl-gui-iptables-insert.sh).

  - fix multiple usage of " in command construction

  - show local blocklists (in /etc/pgl/blocklists.local) in Configure tab
    (adding them works flawlessly)

  - if blocklists.list is missing and I add a new list, pgl-gui segfaults
-------------------------------------------------------------------------------
(gdb) run
Starting program: /usr/bin/pgl-gui
[Thread debugging using libthread_db enabled]
[New Thread 0x7ffff0ca0700 (LWP 24128)]
** Debug: superuser file:  "/usr/bin/gksu"
** Debug: "/var/log/pgl"
** Warning: QStringList getFileData(const QString&) Could not read from file "/var/log/pgl"
** Warning: void PeerguardianInfo::updateLogData() Failed to retreive information for moblock from file "/var/log/pgl"
[New Thread 0x7fffe5462700 (LWP 24129)]
** Debug: list size:  0
** Debug: list size:  0
** Debug: true
[New Thread 0x7fffe3415700 (LWP 24133)]
[New Thread 0x7fffde4a4700 (LWP 24134)]
** Debug: ~AddExceptionDialog()
[Thread 0x7fffe3415700 (LWP 24133) exited]
[Thread 0x7fffde4a4700 (LWP 24134) exited]

Program received signal SIGSEGV, Segmentation fault.
0x00007ffff6aacf34 in QString::operator=(QString const&) () from /usr/lib/libQtCore.so.4
-------------------------------------------------------------------------------

###############################################################################

  [jre]

  - Verify flags etc. in Makefile, use variables where possible
    CFLAGS for the C compiler
    CPPFLAGS in any compilation command that runs the preprocessor
    LDFLAGS in any compilation command that does linking as well as in any
        direct use of ld
    verify where prerequisite FORMS_HEADERS is necessary

###############################################################################



All components:

  - use dbus for communication between components. Especially for logging
    events, instead of parsing the logfiles. [partly done]
    change naming to e.g. org/pgl/pgld/...

  - use inotify (available since Linux kernel 2.6.13) to reload after
    configuration change.

  - use doxygen or something like that for automatic documentation.

  - fix/update license headers of pgl-gui and pgld

  - long run whitelisting concept:
    allow.p2p etc.:
      implementation pglcmd:
        remote whitelists automatically updated (URLs in allowlists.list) and/or
        local whitelists (in folder allowlists.local).
      implementation pgld:
        pgld [OPTIONS] -b BLOCKLIST(S) -w WHITELIST(S)
        pgld -m -b BLOCKLIST(S) -w WHITELIST(S) > master_blocklist.p2p
        The IP ranges in these lists get unmerged (removed) from pgld's
        internally loaded blocklist/the master blocklist.
        NOTE: the following implementation doesn't work:
        - check packets first against the allowlist, if match: do the same as
          for non-matching against blocklist
        - then check against blocklist (as currently)
        --> if IP A is in a WHITELIST and IP B is in a BLOCKLIST, then traffic
            between A and B is not blocked in FWD (checks saddr and daddr, thus
            it matches A in any case), but blocked in IN (if B is saddr) and OUT
            (if B is daddr).
    WHITE_IP_[IN|OUT|FWD]:
      user defined IP whitelistings on a per chain basis. May appear in a remote
      whitelist today, but not tomorrow. Are managed through iptables.
      (keep current implementation).


Packaging:

  - add LOWMEM flavor packages

  - add debtags to debian packages



Web:

  - Update phoenixlabs.org

  - update wiki.phoenixlabs.org

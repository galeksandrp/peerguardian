Template: pglcmd/warning_block
Type: note
_Description: WARNING: pgl may block your complete network/internet access!
 pgl starts automatically at system boot per default. Some preconfigured
 blocklists are used and will be updated once a day. These blocklists may block
 much more than what you want. This may result in a strongly limited network
 availability - including your own LAN, gateway and DNS server, many webpages,
 services like eMail, instant messaging or the "weather applet" and your
 machine's accessibility from the internet.
 .
 There are many configuration options to prevent this. Per default pglcmd
 already takes care of allowing (whitelisting) LAN traffic, DNS server and
 loopback device. If you are on a public LAN, you probably want to disable this
 feature.
 .
 For those who are stuck on this screen: Press the TAB key to select OK and
 press enter.

Template: pglcmd/warning_firewall
Type: note
_Description: WARNING: Users with other firewall (iptables rules)
 pgl does not conflict with other firewalls (iptables rules) as long as you make
 sure the following three conditions hold:
  - pgl marks non-matched (IP is not in the blocklist) packets. (The marking
    feature is on per default in pglcmd.)
  - Other firewalls do not mark packets.
  - pgl is started after other firewalls. If other firewalls are
    started/reloaded after pgl, then you need to restart pgl again. You will
    be fine, if the iptables rules which send traffic to the iptables chains
    (pgl_in, pgl_out and pgl_fwd) stand before all other iptables rules which
    ACCEPT traffic.
    To help you achieve this, pglcmd.wd restarts pgl if it detects any problems.
    But it's still recommended to restart pgl manually, whenever another
    application changed the iptables setup.

Template: pglcmd/blocklists
Type: multiselect
Choices: atma_atma, Bluetack_ads, Bluetack_badpeers, Bluetack_bogon, Bluetack_dshield, Bluetack_edu, Bluetack_for-non-lan-computers, Bluetack_forum-spam, Bluetack_hijacked, Bluetack_iana-multicast, Bluetack_iana-private, Bluetack_iana-reserved, Bluetack_level1, Bluetack_level2, Bluetack_level3, Bluetack_Microsoft, Bluetack_proxy, Bluetack_rangetest, Bluetack_spider, Bluetack_spyware, Bluetack_web-exploit, Bluetack_webexploit-forumspam, cidr-report_bogon, dchubad_faker, dchubad_hacker, dchubad_pedophiles, dchubad_spammer, nexus23_ipfilterx, peerblock_rapidshare, spamhaus_drop, TBG_Bogon, TBG_Business_ISPs, TBG_Educational_Institutions, TBG_General_Corporate_Ranges, TBG_Hijacked, TBG_Primary_Threats, TBG_Search_Engines
Default: TBG_Primary_Threats, TBG_General_Corporate_Ranges, TBG_Business_ISPs, TBG_Search_Engines, TBG_Hijacked, TBG_Bogon, Bluetack_proxy, Bluetack_dshield
_Description: What blocklists shall be used?
 WARNING: Using too many and/or inappropriate lists may seriously degrade your
 internet service.
 .
 This selects the blocklists. These lists were created by Bluetack
 (http://www.bluetack.co.uk),TBG (http://tbg.iblocklist.com) and others.
 They are provided by iblocklist.com.
 .
 You can get more information about these blocklists in
  /usr/share/doc/pglcmd/README.blocklists.gz and online at
  http://www.bluetack.co.uk/forums/index.php?autocom=faq&CODE=02&qid=17 and
  http://tbg.iblocklist.com/pages/faq.html
 .
 If you have specified additional blocklists in /etc/pgl/blocklists.list,
 they will be kept as well. Blocklists that are known to be not downloadable
 will be commented out.

Template: pglcmd/LOG_SYSLOG
Type: boolean
Default: true
_Description: Turn on logging to syslog?
 Configuration variable: LOG_SYSLOG
 .
 This enables logging of pgld and pglcmd to the system log.

Template: pglcmd/LOG_IPTABLES
Type: select
Choices: Do not log blocked packets to syslog., Log blocked packets to syslog., Do not touch my settings. Use the current custom value instead.
Default: Do not log blocked packets to syslog.
_Description: Turn on iptables logging of blocked packets to syslog?
 Configuration variable: LOG_IPTABLES
 .
 If you choose to log blocked packets to syslog, an iptables rule with the
 target "LOG --log-level info" for "marked block" packets will be inserted
 directly before the iptables rule which decides what happens to "marked block"
 packets.
 .
 This will only work if you mark matched (IP is in the blocklist) packets. (The
 marking feature is on per default. It will be explained and asked for later.)
 .
 The default is not to log blocked packets to syslog.

Template: pglcmd/VERBOSITY
Type: select
Choices: Output to STDOUT is off (only errors will be reported)., Output to STDOUT is on., Output to STDOUT is on but no warning will be shown if an operation is configured not to be executed.
Default: Output to STDOUT is on.
_Description: Set the verbosity of pglcmd:
 Configuration variable: VERBOSITY
 .
 This only affects the output to STDOUT by pglcmd, cron and init. But it does
 not affect logging or the output of pgld.
 .
  0 - Output to STDOUT is off (only errors will be reported).
  1 - Output to STDOUT is on. (default)
  2 - Output to STDOUT is on but no warning will be shown
      if an operation is configured not to be executed.

Template: pglcmd/INIT
Type: boolean
Default: true
_Description: Turn on automatic start?
 Configuration variable: INIT
 .
 "No" prevents the init script from starting on "start". Therefore pgl will not
 be started at system boot. The same behaviour can be achieved by
 removing/tweaking the init file and the links pointing to it. You can do this
 manually or by using an application such as rcconf.

Template: pglcmd/CRON
Type: boolean
Default: true
_Description: Turn on automatic blocklist update?
 Configuration variable: CRON
 .
 This sets if the daily cron job updates the blocklists.

Template: pglcmd/WD
Type: boolean
Default: true
_Description: Enable watchdog to monitor pgl?
 Configuration variable: WD
 .
 The watchdog checks in regular intervals (per default 5 minutes), if some of
 the necessary iptables rules exist and if the daemon is responsive. If one of
 these tests fails, it restarts pgl.
 .
 This is especially useful, if you have other firewall applications running,
 because they often mess up the iptables rules, which can be fixed by restarting
 pgl. Unfortunately this manual action is often forgotten.

Template: pglcmd/NFQUEUE_NUMBER
Type: string
Default: 92
_Description: Set the NFQUEUE queue number:
 Configuration variable: NFQUEUE_NUMBER
 .
 Valid queue numbers are 0 to 65535. The default value is 92.
 .
 Insert the plain number as you would give it in an iptables command after
 "--queue-num". Do not use surrounding "quotes".

Template: pglcmd/IPTABLES_SETTINGS
Type: select
Choices: Do not set any iptables rules. You or another script/firewall has to do this!, Use separate iptables chains., Only set custom iptables rules.
Default: Use separate iptables chains.
_Description: Set how traffic is sent to pgld:
 Configuration variable: IPTABLES_SETTINGS
 .
 The default is to place iptables rules in separate iptables chains
 (pgl_in, pgl_out and pgl_fwd).
 .
 You can set custom iptables rules in any file named ...insert.sh or
 ...remove.sh in the folder /etc/pgl/. These custom scripts are executed either
 additionally to the setting of separate iptables chains or exclusively.

Template: pglcmd/IPTABLES_ACTIVATION
Type: select
Choices: Do nothing. You or another script/firewall has to do this!, Send all NEW traffic to the iptables chains., Send all traffic to the iptables chains.
Default: Send all NEW traffic to the iptables chains.
_Description: Activate the iptables chains?
 Configuration variable: IPTABLES_ACTIVATION
 .
 Decide what traffic shall be checked by pgl. If you previously decided to use
 separate iptables chains, then it is a good idea to send all NEW traffic there.
 It is absolutely safe to only check NEW traffic.
 .
 Checking all (not only NEW) traffic might cause problems, because pgl has to
 check much more traffic then. Further whitelisting gets more complicated, since
 you have to think of both directions, incoming and outgoing. Only do this, if
 you are sure that you want to.
 .
 The iptables rules that activate the iptables chains are inserted at the head
 of the chains INPUT, OUTPUT and FORWARD.

Template: pglcmd/REJECT
Type: boolean
Default: true
_Description: Do you want to mark matched (IP is in the blocklist) packets?
 Configuration variable: REJECT
 .
 Set what happens to matched (IP is in the blocklist) packets.
 .
 If you MARK matched packets, then further iptables rules that match this MARK
 decide what happens to the packets. E.g. this allows to REJECT packets to avoid
 the long timeout which occurs when packets are DROPped, see below. This setting
 is also necessary for iptables logging to syslog, see above. (default)
 .
 If you do not MARK matched packets, they will be DROPped directly.

Template: pglcmd/REJECT_IN
Type: select
Choices: REJECT, DROP, Do not touch my settings. Use the current custom value instead.
Default: DROP
_Description: Set the iptables target for "marked block" incoming packets:
 Configuration variable: REJECT_IN
 .
 REJECT: The sender of the packet is notified that the packet was blocked.
 .
 DROP: The sender of the packet is not notified that the packet was blocked.
 .
 Be careful: senseless values are also accepted.

Template: pglcmd/REJECT_OUT
Type: select
Choices: REJECT, DROP, Do not touch my settings. Use the current custom value instead.
Default: REJECT
_Description: Set the iptables target for "marked block" outgoing packets:
 Configuration variable: REJECT_OUT
 .
 REJECT: The sender of the packet is notified that the packet was blocked.
 .
 DROP: The sender of the packet is not notified that the packet was blocked.
 .
 Be careful: senseless values are also accepted.

Template: pglcmd/REJECT_FW
Type: select
Choices: REJECT, DROP, Do not touch my settings. Use the current custom value instead.
Default: DROP
_Description: Set the iptables target for "marked block" forwarded packets:
 Configuration variable: REJECT_FW
 .
 REJECT: The sender of the packet is notified that the packet was blocked.
 .
 DROP: The sender of the packet is not notified that the packet was blocked.
 .
 Be careful: senseless values are also accepted.

Template: pglcmd/ACCEPT
Type: boolean
Default: true
_Description: Do you want to mark non-matched (IP is not in the blocklist) packets?
 Configuration variable: ACCEPT
 .
 Set what happens to non-matched (IP is not in the blocklist) packets.
 .
 If you MARK non-matched packets, then they will be just ignored by pgl. This
 allows integration with other firewalls. (default)
 .
 If you do not MARK non-matched (IP is not in the blocklist) packets, they will
 be ACCEPTed directly.

Template: pglcmd/info_whitelisting
Type: note
_Description: Whitelisting
 The following questions help you define which traffic will NOT be checked by
 pgl. This is called "whitelisting".
 .
 Do a "dpkg-reconfigure pglcmd" to get the full set of questions (many have
 only low priority and will not be asked per default).
 .
 Traffic is categorized as:
  incoming:
  someone from the internet wants to access your machine
  outgoing:
  you want to access someone on the internet, e.g. websurfing
  forward:
  traffic passes your machine, e.g. because it is a router
  or runs virtual machine software such as VirtualBox.

Template: pglcmd/WHITE_TCP_OUT
Type: string
Default: http https
_Description: Whitelist outgoing TCP ports:
 Configuration variable: WHITE_TCP_OUT
 .
 Whitelist ports by port number or with the associated service name. Port ranges
 are specified in the format "port:port". Up to 15 ports can be specified. A
 port range (port:port) counts as two ports.
 .
 Common ports:
   80 - http
  443 - https
   22 - ssh
  993 - SSL IMAP
 .
 Separate multiple entries with whitespace (" "). Do not use surrounding
 "quotes". Be careful: senseless values are also accepted.

Template: pglcmd/WHITE_UDP_OUT
Type: string
Default:
_Description: Whitelist outgoing UDP ports:
 Configuration variable: WHITE_UDP_OUT
 .
 Whitelist ports by port number or with the associated service name. Port
 ranges are specified in the format "port:port". Up to 15 ports can be
 specified. A port range (port:port) counts as two ports.
 .
 Separate multiple entries with whitespace (" "). Do not use surrounding
 "quotes". Be careful: senseless values are also accepted.

Template: pglcmd/WHITE_TCP_IN
Type: string
Default:
_Description: Whitelist incoming TCP ports:
 Configuration variable: WHITE_TCP_IN
 .
 Whitelist ports by port number or with the associated service name. Port
 ranges are specified in the format "port:port". Up to 15 ports can be
 specified. A port range (port:port) counts as two ports.
 .
 Separate multiple entries with whitespace (" "). Do not use surrounding
 "quotes". Be careful: senseless values are also accepted.

Template: pglcmd/WHITE_UDP_IN
Type: string
Default:
_Description: Whitelist incoming UDP ports:
 Configuration variable: WHITE_UDP_IN
 .
 Whitelist ports by port number or with the associated service name. Port
 ranges are specified in the format "port:port". Up to 15 ports can be
 specified. A port range (port:port) counts as two ports.
 .
 Separate multiple entries with whitespace (" "). Do not use surrounding
 "quotes". Be careful: senseless values are also accepted.

Template: pglcmd/WHITE_TCP_FORWARD
Type: string
Default:
_Description: Whitelist forwarded TCP ports:
 Configuration variable: WHITE_TCP_FORWARD
 .
 Whitelist ports by port number or with the associated service name. Port
 ranges are specified in the format "port:port". Up to 15 ports can be
 specified. A port range (port:port) counts as two ports.
 .
 Separate multiple entries with whitespace (" "). Do not use surrounding
 "quotes". Be careful: senseless values are also accepted.

Template: pglcmd/WHITE_UDP_FORWARD
Type: string
Default:
_Description: Whitelist forwarded UDP ports:
 Configuration variable: WHITE_UDP_FORWARD
 .
 Whitelist ports by port number or with the associated service name. Port
 ranges are specified in the format "port:port". Up to 15 ports can be
 specified. A port range (port:port) counts as two ports.
 .
 Separate multiple entries with whitespace (" "). Do not use surrounding
 "quotes". Be careful: senseless values are also accepted.

Template: pglcmd/WHITE_LOCAL
Type: select
Choices: No automatic whitelisting., Automatic whitelisting of LAN and DNS server and loopback device., Automatic whitelisting of DNS server and loopback device.
Default: Automatic whitelisting of LAN and DNS server and loopback device.
_Description: Set the automatic whitelisting options:
 Configuration variable: WHITE_LOCAL
 .
 The default is to automatically whitelist LAN, DNS server and loopback device.
 This is the recommended setting if you are at home.
 .
 If you are on a public LAN, you probably want it checked by pgl. So choose to
 only whitelist the DNS server and the loopback device then.

Template: pglcmd/allowlist
Type: string
Default:
_Description: Add a line to the allowlist:
 Any value given here will be added to the allow list (per default this is
 /etc/pgl/allow.p2p). Lines in the allow list must be in the PeerGuardian
 .p2p text or the LOWMEM format (description is optional):
   Some organization:1.0.0.0-1.255.255.255
 .
 This is also true if your blocklists are in another format.
 .
 You can whitelist more IP ranges by adding them to /etc/pgl/allow.p2p.

Template: pglcmd/IP_REMOVE
Type: string
Default:
_Description: Remove lines from the blocklist:
 Configuration variable: IP_REMOVE
 .
 Remove lines from the blocklist matching the specified pattern (the search
 pattern is case-insensitive).
 .
 Separate patterns with a semicolon ";". Do not use surrounding "quotes".
 Be careful: senseless values are also accepted.
 .
 Example:
  google;yahoo;altavista;debian;sourceforge
 .
 Warning for beginners: If you want to whitelist a special IP then use the
 allowlist. If you specify an IP here you will most likely fail.

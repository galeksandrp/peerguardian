README for pglcmd                          Sun May  3 18:33:35 CEST 2009


================================================================================

Table of Contents:

Description
Features
Usage
Options
Configuration
Files
Installation
Supported systems
Requirements

================================================================================

Description:

pglcmd is designed to do all tasks related to pgld. pgld checks internet traffic
based on large lists of IP address ranges in order to protect your privacy. You
can get it at http://sourceforge.net/projects/peerguardian/

WARNING: pgl may block your complete network/internet access!

pgl starts automatically at system boot per default. Some preconfigured
blocklists are updated once a day. Be warned: this will not only block many
unwanted IPs, but in most cases this will result in a limited network
availability. This includes your own LAN and router, many webpages, services
like eMail, instant messaging or the "weather applet" and your
machine's accessibility from the internet.

There are many configuration options to prevent this. E.g. the default is to
always allow (whitelist) LAN traffic, DNS server and loopback device. If you
are on a public LAN, you probably want to disable this feature.


WARNING: Users with firewall (iptables rules)

pgl does not conflict with other firewalls (iptables rules). But if you use
them, you have to take special care to avoid severe conflicts. Make sure the
following three conditions hold:
  - pgl marks non-matched (IP is not in the blocklist) packets.
    (The marking feature is on per default.)
  - Other firewalls do not mark packets.
  - pgl is started after other firewalls. If other firewalls are
    started/reloaded after pgl, then you need to restart pgl
    again. You will be fine, if the iptables rules which send traffic to the
    iptables chains (pgl_in, pgl_out and pgl_fwd)
    stand before all other iptables rules which ACCEPT traffic.
    To help you achieve this, pglcmd.wd restarts pgl if it
    detects any problems. But it's still recommended, to restart pgl
    manually, whenever another application changed the iptables setup.


Technical note:

pgld checks traffic (packets) that is sent to the iptables NFQUEUE (or the
deprecated QUEUE) target. If the necessary support is not built in the kernel
directly, pglcmd will load the necessary kernel modules.
Up to MoBlock 0.8 packets that do not match the blocklist are ACCEPTed and
packets that match the blocklist are DROPped.
MoBlock (since 0.9) and NFBlock can also MARK packets, so that iptables rules
that match this mark decide what happens with these packets. Per default
marking is on: allowed packets (IP is not in the blocklist) get the mark "20"
(shown as 0x14 by iptables) and blocked packets (IP is in the blocklist) get the
mark "10" (0xa).
Marked packets repeat the hook function (NF_REPEAT). So they are sent back to
the head of the iptables chain again. A packet may only bear one mark, so there
mustn't be any other applications / iptables rules that mark packets. Otherwise
the setup will not work and packets will loop forever.
There are iptables rules to REJECT "marked block" outgoing packets and DROP
"marked block" incoming and forwarded packets. "Marked allowed" packets are
ignored by pgl's iptables setup, so other iptables rules decide what
happens to them.

================================================================================

Features:

- Start and stop pgl. Or let init do this automatically.
- Update your blocklists from online sources. Or let cron do this automatically.
  Backups will be used if a problem occurs. Additionally you may use your local
  blocklists.
- Examine your selected blocklists by searching the single blocklists for
  keywords.
- Remove lines by keyword from the blocklists.
- Handle your iptables rules: use a default setup, easily allow all traffic on
  specific ports and use an allow list, or add your own sophisticated iptables
  rules.
- Allow all LAN traffic and the DNS server automatically. If you are on a public
  LAN, you probably want to disable this feature.
- Check the status and test the IP block daemon.
- A watchdog monitors pgl and restarts it if necessary.
- Detects if kernel modules are needed and loads them if necessary.
- Set verbosity and logging options.
- Provides LSB 3.1 compatible init script.
- Daily rotation of the logfiles.

================================================================================

Usage:

pglcmd OPTION
pglcmd search PATTERN

================================================================================

Options:

start
  inserts iptables rules, starts pgld and the watchdog. If the blocklist
  configuration changed, rebuilds the master blocklist.

stop
  deletes iptables rules and stops pgld.

start_wd
  starts the watchdog.

stop_wd
  stops the watchdog.

restart
  restarts pgld.

reload
  rebuilds the master blocklist and reloads pgld if it is running.

update
  updates the blocklists, rebuilds the master blocklist and reloads pgld if it
  is running.

status
  gives the iptables settings and the status of pgld and the watchdog.

test
  does a simple test to check if pgl is working (pings a random IP from the
  blocklist, checks if this IP was logged in the logfile, and if the IP
  answered).

search
  outputs the occurences of a keyword and the names of the single blocklists.

stats
  reports MoBlock's statistics.

reset_stats
  resets MoBlock's statistics.

show_config
  shows the current configuration settings.

Note for blocklist operations: When the master blocklist is built, missing
single blocklists are downloaded. If any blocklist fails to download, and if
there is no old version available, the operation aborts. If a downloaded
blocklist fails to extract, it is deleted and the operation aborts.


================================================================================

Configuration:

Blocklists are configured in blocklists.list
(/etc/pgl/blocklists.list).

Most things are done in pglcmd.conf (/etc/pgl/pglcmd.conf).
Refer to pglcmd.defaults (/usr/lib/pgl/pglcmd.defaults) for
the complete set of possible configuration variables with comments.

The allow list for IP ranges is allow.p2p (/etc/pgl/allow.p2p). Per
default, the allowlist is used for incoming and outgoing connections. If desired
different allow lists for incoming, outgoing and forward connections may be
used.




================================================================================

Files:

- pglcmd (required)
  The shell script pglcmd. Must be executable.

- pglcmd.main (required)
  The core of all executable scripts. Must be executable.
  Referenced as CONTROL_MAIN in pglcmd, init, cron.daily and if.up.

- pglcmd.defaults (required)
  Default settings for all variables and pathnames.
  Referenced as CMD_DEFAULTS in pglcmd.main.

- pglcmd.lib (required)
  Library for pglcmd.main.

- blocklists.list (required)
  Lists all blocklists that are used (and downloaded) by pglcmd for use by pgld.

- pglcmd.wd (recommended)
  Monitors pgl and restarts it if necessary.

- pglcmd.conf
  The user configuration file for pglcmd.

- allow.p2p
  Allow list which contains IP ranges that shall be whitelisted.

- if-up
  Execute this, whenever a network interface is brought up, to make sure that
  the automatic whitelisting of traffic in the LAN does work. Must be
  executable.

- iptables-custom-insert.sh (example)
  Script to insert custom iptables rules. Any script in /etc/pgl/ (the
  directory is defined in IPTABLES_CUSTOM_DIR) that ends in insert.sh will be
  executed on every "pglcmd start", if IPTABLES_SETTINGS="1" or "2" is
  configured.

- iptables-custom-remove.sh (example)
  Script to delete custom iptables rules. Any script in /etc/pgl/ (the
  directory is defined in IPTABLES_CUSTOM_DIR) that ends in remove.sh will be
  executed on every "pglcmd stop", if IPTABLES_SETTINGS="1" or "2" is
  configured.

- init (optional)
  Init file for starting pgld automatically on every bootup. Must be executable.

- cron.daily (optional)
  Cron file for updating the blocklists automatically with cron. Must be
  executable.

- logrotate (optional, configuration file for logrotate)
  Debian place: /etc/logrotate.d/pglcmd
  Assumes logfile in /var/log/pglcmd.log

- docs/
  Some documentatation. pglcmd.1 is a man page.

- debian/
  You don't need this, this is only needed for the Debian packages.

The following directories/files will be created on usage (path examples for
Debian, configurable in pglcmd.conf):

- /var/spool/pgl
  The single blocklists are downloaded and manipulated in subfolders of this
  folder.

- /var/log/pglcmd.log + rotated logs
  The logfile of the pglcmd script. This file contains amongst other
  things about starting/stopping pgld and updating the blocklists.
  pgld uses /var/log/syslog.

- /var/lib/pgl/guarding.p2p + backup or
  /var/lib/pgl/guarding.p2b + backup or
  /var/lib/pgl/ipfilter.dat + backup
  The master blocklist used by pgld depending on the used format.

================================================================================

Installation:

There's a simple Makefile, which will install pglcmd in fileplaces as in
Debian. This should be the same as defined by the File Hierarchy Standard
(FHS). If this fits for you, simply type

  make install

If you choose other file places, you have to adjust:

- the path to pglcmd.main (CONTROL_MAIN) in pglcmd,
  pglcmd.wd, if-up, cron.daily and init.
- the path to pglcmd.defaults (CMD_DEFAULTS) in pglcmd.main
- PATH in pglcmd.defaults. pgld has to be installed in PATH.
- all other pathnames in pglcmd.defaults
- the Makefile

If your system doesn't have the LSB init-funtions (/lib/lsb/init-functions),
then hardcoded fallback functions will be used.
Fedora 7, CentOS 5 and Ubuntu Hardy and Intrepid have broken LSB init-functions.
On these distributions you should disable the system wide init-functions by
setting LSB="".

================================================================================

Supported systems:

pglcmd was written and tested under Debian Squeeze. However it should run
under every Linux distribution or other POSIX compliant systems.

================================================================================

Requirements:

- iptables
- wget (optional, needed for blocklists update)
- /usr/bin/printf (optional, needed during "update" for archive type detection)
- p7zip (optional, needed for blocklists packed as .7z)
- unzip (optional, needed for blocklists packed as .zip)
- start-stop-daemon (optional)
- awk, sed, grep, basename, dirname, cat, cd, mv, cp, zcat, md5sum, renice, pidof
  (those should really be on every system)
- netfilter kernel support (either as modules or directly built in the kernel)
  These are the modules that are loaded here:
    iptable_filter
    ip_tables
    ipt_REJECT
    nf_conntrack
    nf_conntrack_ipv4
    nf_defrag_ipv4
    nfnetlink
    nfnetlink_queue
    x_tables
    xt_iprange
    xt_mark
    xt_multiport
    xt_NFQUEUE
    xt_state
    xt_tcpudp
  The list was compiled with:
  lsmod | grep -E "^x|^nf|^ip" | grep -Ev "^ip6|^ipv6" | sed "s| .*||" | sort
  Note that xt_ may be named ip_ or ipt_ on older systems.
- /lib/lsb/init-functions (optional, because as fallback there's a modified copy
  of the Debian init-functions in pglcmd)
  Used functions, provided by /lib/lsb/init-functions (version >= 3.1):
   - start_daemon
   - killproc
   - pidofproc
   - status_of_proc
   - log_failure_msg
   - log_warning_msg
   - log_success_msg

================================================================================

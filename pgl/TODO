TODO




pgld:

  - replace NIPQUAD (removed from kernel 2.6.36)

  - improve logging: object org/netfilter/pgl/IpMatch consisting of separate
    items (srcip, srcport, destip, destport, proto, description) instead of a
    plain string.

  - add option to search for a specified IP in a blocklist:
    pgld -f IP BLOCKLIST
    if IP is found in the BLOCKLIST: return 0 and output the matching range(s).
    if IP is not found: return 1

  - make length of range description configurable (with LOWMEM:=range=0)




pglcmd:

  - add separate pidfiles for update and start/reload.

  - FIX: since 2011-08-11 I get system mails claiming I tried to send a mail
    without recipient. Seems to be related at least to "restart".

  - FIX: on stop (and probably other commands), only dump/reset stats once

  - nice: on CentOS it is required to use e.g. "+5". Find solutions suiting all
    distros.

  - adapt to real allow lists:
    requires allow lists in pgld, see above
    - add configuration file allowlists.lists to handle remote allowlists
      (like blocklists.list for remote blocklists)
    - load all allowlists in a specified folder "allowlists.local"
    - remove variables ALLOW_[IN|OUT|FWD]

  - search function:
    requires search function in pgld, see above.
    Use this function instead of grep'ping for REGEX.

  - use "ip addr" instead of "ifconfig":
    see http://jengelh.medozas.de/2008/0219-ifconfig-sucks.php

  - add dbus support, especially for logging.
    - Completely rework the logging part, and check if all messages go where
      they should.
    - send error messages to console (STDERR 1>&2), logfile and dbus.

  - add pidfile for pglcmd (e.g. to prevent 2 starts at nearly the same time.
    How to handle "update"? - this does not conflict with start.

  - Send traffic to several NFQUEUE nums with --queue-balance and run multiple
    pgld instances for these nums. This might help on heavy load.

    Alternatively increasing the default receive/send window seems to fix the
    problem:
        sysctl -w net.core.rmem_default=8388608
        sysctl -w net.core.wmem_default=8388608
    --
    peerguardian-devel@lists.sourceforge.net by dogg@retroject.net - 2010-04-20

  - on "stop" remove kernel modules that were inserted by pglcmd. (see dino's
    synology packaging http://forums.phoenixlabs.org/showpost.php?p=128371&postc
    ount=20). Probably disable this per default, to avoid problems.

  - fix debconf to use debian/config again.
    This stuff is currently in postinst, because otherwise debconf doesn't work
    as expected: Debconf runs twice during installation: first it asks questions
    and then it overwrites the answers with the not-yet modified configuration
    files.
    Further the debconf database is not cleared properly on purge.

  - adapt test function for peerguardian .p2b v2 binary format blocklist
    formats.

  - [DISCUSS]: if any blocklist is unavailable, should pglcmd exit (as it
    does currently, in order to give no false security), or continue but return
    an error (if one list is missing, it's still better to use at least the
    other blocklists).

  - [DISCUSS] Block IPv6 completely because currently only IPv4 is checked?




pglgui:

  [freemind]

  FIX:

  - enable "Allow Port" on right-click only for protocols TCP and UDP.

  - pglgui crashes if you try to whitelist temporarily, while pgl is not
    running.

  - images/settings.png is not shown (at least under Gnome)

  - right-click whitelisting:
    tooltips are not shown (at least under Gnome)
    "Whitelist temporarily" is not explained to the user

  - show local blocklists (files in /etc/pgl/blocklists.local/) in Configure tab
    (adding them works flawlessly)

  - save some space to allow a smaller window, while "Whitelist" in the
    Configuration Tab is still visible with one line (Jerriy, 2011-10-11,
    http://ubuntuforums.org/showpost.php?p=11331774&postcount=554)

  NEW FEATURES:

  - Allow to sort the columns in "Configure - Whitelist" by clicking in their
    header.

  - "Allow temporarily" on right-click in the log of blocked IPs:
    delete the iptables rule after X minutes (as far as pglgui doesn't crash,
    otherwise live with it and wait for the next pglcmd restart)

  - "Details about blocked IP" on right-click in the log of blocked IPs:
    - whois IP
    - pglcmd search IP [requires search function in pgld, see above.]

  - Window title "Blocking $X IP ranges ($Y IPs)":
    Correct long term implementation: request the data from pgld via dbus.

  - policykit support (instead of kdesudo/gksu)
    This also solves this security problem: you can give root rights to
      "/usr/bin/gksu "sh /tmp/execute-all-pgl-commands.sh""
    But this file is writable for the user.

  - use ${BLOCKLISTS_DIR}/lists.xml to determine human friendly blocklist names
    for URLs like this: http://list.iblocklist.com/?list=ewqglwibdgjttwttrinl&fi
    leformat=p2p&archiveformat=gz
    *** Also use lists.xml to show the list description. ***

  - "Last blocklist update":
    Implement per blocklist in "Configure - Blocklist"
    (use "stat --format=%y $BLOCKLIST_DOWNLOADED | head -c 16").
    [ $BLOCKLIST_DOWNLOADED requires ${BLOCKLISTS_DIR}/lists.xml (implement
    directly in pglgui or use function LIST_URL2LIST_NAME from pglcmd.lib ]

  - pop-up warning on errors from pglcmd (e.g. blocklist is not available)
    [ Requires pglcmd dbus ]




All components:

  - use dbus for communication between components. Especially for logging
    events, instead of parsing the logfiles. [partly done]
    change naming to e.g. org/pgl/pgld/...

  - use inotify (available since Linux kernel 2.6.13) to reload after
    configuration change.

  - use e.g. notification-daemon to notify about errors.

  - automatic documentation, use e.g.
    doxygen (creates doc from source)
    doconce (markup language for several output formats).

  - fix/update license headers of pglgui and pgld

  - long run whitelisting concept:
    allow.p2p etc.:
      implementation pglcmd:
        remote whitelists automatically updated (URLs in allowlists.list) and/or
        local whitelists (in folder allowlists.local).
      implementation pgld:
        pgld [OPTIONS] -b BLOCKLIST(S) -w WHITELIST(S)
        pgld -m -b BLOCKLIST(S) -w WHITELIST(S) > master_blocklist.p2p
        The IP ranges in these lists get unmerged (removed) from pgld's
        internally loaded blocklist/the master blocklist.
        NOTE: the following implementation doesn't work:
        - check packets first against the allowlist, if match: do the same as
          for non-matching against blocklist
        - then check against blocklist (as currently)
        --> if IP A is in a WHITELIST and IP B is in a BLOCKLIST, then traffic
            between A and B is not blocked in FWD (checks saddr and daddr, thus
            it matches A in any case), but blocked in IN (if B is saddr) and OUT
            (if B is daddr).
    WHITE_IP_[IN|OUT|FWD]:
      user defined IP whitelistings on a per chain basis. May appear in a remote
      whitelist today, but not tomorrow. Are managed through iptables.
      (keep current implementation).

  - cppcheck --enable=all ./

  - coccinelle
    automatically analyze and rewrite C code
    https://lwn.net/Articles/315686/


Packaging:

  - add LOWMEM and NODBUS flavor packages

  - build for other arches with qemubuilder
    test OpenSUSE build service

  - add debtags to debian packages

  - cme command from libconfig-model-perl provides a way to check the
    dependency list. Obsolete versions can be cleaned up automatically with
    'cme fix dpkg-control'.

  - check LSB + FHS for pid file location, adapt:
    Currently Debian/Unstable is going through a transition to using /run instead
    of /var/run.
    --
    etbe, 07/22/2011


Web:

  - update http://sourceforge.net/projects/peerguardian/
    - replaces defunct phoenixlabs.org

  - create wiki at peerguardian.sourceforge.net
    (based on https://help.ubuntu.com/community/MoBlock)

  - add information for new developers, short git intro

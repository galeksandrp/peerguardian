#!/bin/sh
# blockcontrol.main: blockcontrol configuration script

CONTROL_CONF="/usr/lib/blockcontrol/blockcontrol.conf"

# Load standard configuration.
if [ -f "$CONTROL_CONF" ] ; then
	. $CONTROL_CONF || { echo "$0 Error: Failed to source $CONTROL_CONF although this file exists."; exit 1; }
else
	echo "$0: Missing file $CONTROL_CONF (Error 7)."
	exit 7
fi

# Check what daemon is installed in PATH and set variables accordingly.
IFS=":"
for PATH_I in $PATH ; do
	if [ -x "$PATH_I/moblock" ] ; then
		NAME="moblock"
		DAEMON="$PATH_I/moblock"
		DESC="MoBlock"
		break
	elif [ -x "$PATH_I/nfblockd" ] ; then
		NAME="nfblockd"
		DAEMON="$PATH_I/$NAME"
		DESC="NFblock"
		break
	fi
done
IFS=$STDIFS

# Load default configuration. This overwrites the above values.
if [ -f "$CONTROL_DEFAULT" ] ; then
	. $CONTROL_DEFAULT || { echo "$0 Warning: Failed to source $CONTROL_DEFAULT although this file exists." }
else
	[ -d "$(dirname $CONTROL_DEFAULT)" ] || {
		echo -n "Creating missing directory $(dirname $CONTROL_DEFAULT)"
		mkdir "$(dirname $CONTROL_DEFAULT)" && echo "."
		} || {
		log_failure_msg "$0: Missing directory "$(dirname $CONTROL_CONF)" (Error $E_XCD)."
		log_failure_msg "Check the CONTROL_DEFAULT setting in $0."
		exit $E_XCD
	}
	echo -n "Creating missing $CONTROL_DEFAULT"
	echo "# default - default configuration file for blockcontrol" >> $CONTROL_DEFAULT
	echo "# This file was created automatically by $0." >> $CONTROL_DEFAULT
	echo "" >> $CONTROL_DEFAULT
	echo "# In this file you can put any configuration variable from blockcontrol.conf" >> $CONTROL_DEFAULT
	echo "# ($CONTROL_CONF). Values in blockcontrol.conf will be overwritten by" >> $CONTROL_DEFAULT
	echo "# values in this file (default)." >> $CONTROL_DEFAULT
	echo "" >> $CONTROL_DEFAULT
	echo "# Do a \"blockcontrol restart\" when you have edited this file." >> $CONTROL_DEFAULT
	echo "" >> $CONTROL_DEFAULT
	echo "."
fi

# Load blockcontrol library.
if [ -f "$CONTROL_LIB" ] ; then
	. $CONTROL_LIB || { echo "$0 Error: Failed to source $CONTROL_LIB although this file exists."; exit 1; }
else
	echo "$0: Missing file $CONTROL_LIB (Error $E_XFILE)."
	exit $E_XFILE
fi

# Load LSB init-functions shell library
# Debian: Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
# In blockcontrol.lib there's a modified copy of the Debian init-functions, as a
# fallback, which will be overwritten by the following functions.
if [ -f "$LSB" ] ; then
	. $LSB || { echo "$0 Warning: Failed to source $LSB although this file exists." }
fi

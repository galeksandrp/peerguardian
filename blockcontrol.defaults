#!/bin/sh
# blockcontrol.defaults: blockcontrol defaults library and configuration script

# This file sets sane configuration defaults. They will be overwritten by the
# values in CONTROL_CONF and CONTROL_DEFAULT. Make your changes in those files,
# not here!

# Exit Status Codes
E_BADARGS="2"	# invalid or excess argument(s)
E_NOTROOT="4"	# user had insufficient privilege
E_XBIN="5"	# program is not installed
E_CONFIG="6"	# program is not configured
E_XFILE="7"	# Missing file TODO 177
E_XCD="66"	# No directory TODO 176
E_IPTABLES="8"	# TODO
E_BLOCKLIST="9"	# TODO
E_XEXTERNAL="170"	# Missing external binary/function
E_NETWORK_DOWN="171"	# Testhost not reachable

# TODO: Rework exit status to LSB conformance:
# In case of an error while processing any init-script action except for
# status, the init script shall print an error message and exit with a
# non-zero status code:
# 
# 1	generic or unspecified error (current practice)
# 2	invalid or excess argument(s)
# 3	unimplemented feature (for example, "reload")
# 4	user had insufficient privilege
# 5	program is not installed
# 6	program is not configured
# 7	program is not running
# 8-99	reserved for future LSB use
# 100-149	reserved for distribution use
# 150-199	reserved for application use
# 200-254	reserved

# PATH has to be set here, nowhere else, for the automatic NAME detection.
PATH="/usr/bin:/bin:/sbin:/usr/sbin"

CONTROL_NAME="blockcontrol"
CONTROL_SCRIPT="/usr/bin/$CONTROL_NAME"
CONTROL_LIB="/usr/lib/$CONTROL_NAME/$CONTROL_NAME.lib"
CONF_DIR="/etc/$CONTROL_NAME"
CONTROL_CONF="$CONF_DIR/$CONTROL_NAME.conf"
CONTROL_DEFAULT="/etc/default/$CONTROL_NAME"

# Remember standard IFS (Internal Field Seperator)
STDIFS=$IFS

# Set MoBlock as default IP blocker daemon.
NAME="moblock"
DAEMON="/usr/bin/$NAME"
DESC="MoBlock"
# Check what daemon is installed in PATH and set variables accordingly.
IFS=":"
for PATH_I in $PATH ; do
	if [ -x "$PATH_I/moblock" ] ; then
		NAME="moblock"
		DAEMON="$PATH_I/moblock"
		DESC="MoBlock"
		break
	elif [ -x "$PATH_I/nfblockd" ] ; then
		NAME="nfblockd"
		DAEMON="$PATH_I/$NAME"
		DESC="NFblock"
		break
	fi
done
IFS=$STDIFS

BLOCKLIST_FORMAT="p"
LOG_TIMESTAMP="1"
LOG_SYSLOG="0"
LOG_IPTABLES=""
VERBOSITY="1"
INIT="1"
CRON="1"
CRON_MAILTO="root"
WGET_OPTS="wget -q -t 5 -T 120 -w 5"
IPTABLES_TARGET="NFQUEUE"
NFQUEUE_NUMBER="92"
IPTABLES_SETTINGS="1"
IPTABLES_ACTIVATION="1"
REJECT="1"
REJECT_MARK="10"
REJECT_IN="DROP"
REJECT_OUT="REJECT"
REJECT_FW="DROP"
ACCEPT="1"
ACCEPT_MARK="20"
IPTABLES_TARGET_WHITELISTING="RETURN"
WHITE_LOCAL="1"
WHITE_TCP_IN=""
WHITE_UDP_IN=""
WHITE_TCP_OUT=""
WHITE_UDP_OUT=""
WHITE_TCP_FORWARD=""
WHITE_UDP_FORWARD=""
WHITE_IP_IN=""
WHITE_IP_OUT=""
WHITE_IP_FORWARD=""
IP_REMOVE=""
MASTER_BLOCKLIST_DIR="/var/lib/$NAME"
BLOCKLISTS_DIR="/var/spool/$NAME"
BLOCKLISTS_LIST="$CONF_DIR/blocklists.list"
MD5SUM_FILE="$BLOCKLISTS_DIR/MD5SUM"
ALLOW_IN="$CONF_DIR/allow.p2p"
ALLOW_OUT="$CONF_DIR/allow.p2p"
ALLOW_FW=""
IPTABLES_CUSTOM_INSERT="$CONF_DIR/iptables-custom-insert.sh"
IPTABLES_CUSTOM_DELETE="$CONF_DIR/iptables-custom-remove.sh"
LOG_DIR="/var/log"
DAEMON_LOG="$LOG_DIR/$NAME.log"
CONTROL_LOG="$LOG_DIR/blockcontrol.log"
STATFILE="/var/log/MoBlock.stats"
PIDFILE="/var/run/$NAME.pid"
LSB="/lib/lsb/init-functions"
TESTHOST="iblocklist.com"
LSB_MODE="1"


# Load configuration. This overwrites the above values.
if [ -f "$CONTROL_CONF" ] ; then
	. $CONTROL_CONF || { echo "$0 Error: Failed to source $CONTROL_CONF although this file exists."; exit 1; }
else
	[ -d "$(dirname $CONTROL_CONF)" ] || {
		echo -n "Creating missing directory $(dirname $CONTROL_CONF)"
		mkdir "$(dirname $CONTROL_CONF)" && echo "."
		} || {
		log_failure_msg "$0 Error $E_XCD: Missing directory "$(dirname $CONTROL_CONF)"."
		log_failure_msg "Check the CONTROL_CONF setting in $0."
		exit $E_XCD
	}
	echo -n "Creating missing $CONTROL_CONF"
	echo "# blockcontrol.conf - configuration file for blockcontrol" > $CONTROL_CONF
	echo "# This file was created automatically by $0." >> $CONTROL_CONF
	echo "" >> $CONTROL_CONF
	echo "# This file is sourced by a shell script. Any line which starts with a # (hash) " >> $CONTROL_CONF
	echo "# is a comment and is ignored. If you set the same variable several times," >> $CONTROL_CONF
	echo "# then only the last line will be used. You have to stop and restart $NAME" >> $CONTROL_CONF
	echo "# if you change entries." >> $CONTROL_CONF
	echo "" >> $CONTROL_CONF
	echo "# Values from this file (blockcontrol.conf) will be overwritten by default" >> $CONTROL_CONF
	echo "# (/etc/default/blockcontrol) if they are set there." >> $CONTROL_CONF
	echo "."
fi

# Load default configuration. This overwrites the above values.
if [ -f "$CONTROL_DEFAULT" ] ; then
	. $CONTROL_DEFAULT || { echo "$0 Error: Failed to source $CONTROL_DEFAULT although this file exists."; exit 1; }
else
	[ -d "$(dirname $CONTROL_DEFAULT)" ] || {
		echo -n "Creating missing directory $(dirname $CONTROL_DEFAULT)"
		mkdir "$(dirname $CONTROL_DEFAULT)" && echo "."
		} || {
		log_failure_msg "$0 Error $E_XCD: Missing directory "$(dirname $CONTROL_CONF)"."
		log_failure_msg "Check the CONTROL_DEFAULT setting in $0."
		exit $E_XCD
	}
	echo -n "Creating missing $CONTROL_DEFAULT"
	echo "# default - default configuration file for blockcontrol" >> $CONTROL_DEFAULT
	echo "# This file was created automatically by $0." >> $CONTROL_DEFAULT
	echo "" >> $CONTROL_DEFAULT
	echo "# In this file you can put any configuration variable from blockcontrol.conf" >> $CONTROL_DEFAULT
	echo "# ($CONTROL_CONF). Values in blockcontrol.conf will be overwritten by" >> $CONTROL_DEFAULT
	echo "# values in this file (default)." >> $CONTROL_DEFAULT
	echo "" >> $CONTROL_DEFAULT
	echo "# Do a \"blockcontrol restart\" when you have edited this file." >> $CONTROL_DEFAULT
	echo "" >> $CONTROL_DEFAULT
	echo "."
fi

# Load blockcontrol library.
if [ -f "$CONTROL_LIB" ] ; then
	. $CONTROL_LIB || { echo "$0 Error: Failed to source $CONTROL_LIB although this file exists."; exit 1; }
else
	echo "$0 Error $E_CONFIG: You need $CONTROL_LIB."
	exit $E_CONFIG
fi

# Load LSB init-functions shell library
# Debian: Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
# In blockcontrol.lib there's a modified copy of the Debian init-functions, as a
# fallback, which will be overwritten by the following functions.
if [ -f "$LSB" ] ; then
	. $LSB || { echo "Error: Failed to source $LSB."; exit 1; }	# Don't use log_failure_msg!
fi
